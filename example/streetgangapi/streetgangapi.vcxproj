<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Check|ARM">
      <Configuration>Check</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Check|Win32">
      <Configuration>Check</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Check|x64">
      <Configuration>Check</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="BinaryRequestByebye.cpp" />
    <ClCompile Include="BinaryRequestCreateWorld.cpp" />
    <ClCompile Include="BinaryRequestGetScene.cpp" />
    <ClCompile Include="BinaryRequestGetVersion.cpp" />
    <ClCompile Include="BinaryResponseCreateWorld.cpp" />
    <ClCompile Include="BinaryResponseError.cpp" />
    <ClCompile Include="BinaryResponseGetScene.cpp" />
    <ClCompile Include="BinaryResponseGetVersion.cpp" />
    <ClCompile Include="BinaryStreetGangRequester.cpp" />
    <ClCompile Include="BinaryStreetGangResponder.cpp" />
    <ClCompile Include="MessageBase.cpp" />
    <ClCompile Include="PBRequestByebye.cpp" />
    <ClCompile Include="PBRequestCreateWorld.cpp" />
    <ClCompile Include="PBRequestGetScene.cpp" />
    <ClCompile Include="PBRequestGetVersion.cpp" />
    <ClCompile Include="PBResponseCreateWorld.cpp" />
    <ClCompile Include="PBResponseError.cpp" />
    <ClCompile Include="PBResponseGetScene.cpp" />
    <ClCompile Include="PBResponseGetVersion.cpp" />
    <ClCompile Include="PBStreetGangRequester.cpp" />
    <ClCompile Include="PBStreetGangResponder.cpp" />
    <ClCompile Include="protobuf\cpp\ByebyeRequest.pb.cc" />
    <ClCompile Include="protobuf\cpp\CreateWorldRequest.pb.cc" />
    <ClCompile Include="protobuf\cpp\CreateWorldResponse.pb.cc" />
    <ClCompile Include="protobuf\cpp\ErrorResponse.pb.cc" />
    <ClCompile Include="protobuf\cpp\GetSceneRequest.pb.cc" />
    <ClCompile Include="protobuf\cpp\GetSceneResponse.pb.cc" />
    <ClCompile Include="protobuf\cpp\GetVersionRequest.pb.cc" />
    <ClCompile Include="protobuf\cpp\GetVersionResponse.pb.cc" />
    <ClCompile Include="protobuf\cpp\MessageHeader.pb.cc" />
    <ClCompile Include="protobuf\cpp\Point.pb.cc" />
    <ClCompile Include="protobuf\cpp\Rectangle.pb.cc" />
    <ClCompile Include="RequestByebye.cpp" />
    <ClCompile Include="RequestCreateWorld.cpp" />
    <ClCompile Include="RequestGetScene.cpp" />
    <ClCompile Include="RequestGetVersion.cpp" />
    <ClCompile Include="ResponseCreateWorld.cpp" />
    <ClCompile Include="ResponseError.cpp" />
    <ClCompile Include="ResponseGetScene.cpp" />
    <ClCompile Include="ResponseGetVersion.cpp" />
    <ClCompile Include="StreetGangRestResponseJsonEncoder.cpp" />
    <ClCompile Include="StreetGangRestResponseTextEncoder.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="BinaryRequestByebye.h" />
    <ClInclude Include="BinaryRequestCreateWorld.h" />
    <ClInclude Include="BinaryRequestGetScene.h" />
    <ClInclude Include="BinaryRequestGetVersion.h" />
    <ClInclude Include="BinaryResponseCreateWorld.h" />
    <ClInclude Include="BinaryResponseError.h" />
    <ClInclude Include="BinaryResponseGetScene.h" />
    <ClInclude Include="BinaryResponseGetVersion.h" />
    <ClInclude Include="BinaryStreetGangRequester.h" />
    <ClInclude Include="BinaryStreetGangResponder.h" />
    <ClInclude Include="MessageBase.h" />
    <ClInclude Include="PBRequestByebye.h" />
    <ClInclude Include="PBRequestCreateWorld.h" />
    <ClInclude Include="PBRequestGetScene.h" />
    <ClInclude Include="PBRequestGetVersion.h" />
    <ClInclude Include="PBResponseCreateWorld.h" />
    <ClInclude Include="PBResponseError.h" />
    <ClInclude Include="PBResponseGetScene.h" />
    <ClInclude Include="PBResponseGetVersion.h" />
    <ClInclude Include="PBStreetGangRequester.h" />
    <ClInclude Include="PBStreetGangResponder.h" />
    <ClInclude Include="Point.h" />
    <ClInclude Include="protobuf\cpp\ByebyeRequest.pb.h" />
    <ClInclude Include="protobuf\cpp\CreateWorldRequest.pb.h" />
    <ClInclude Include="protobuf\cpp\CreateWorldResponse.pb.h" />
    <ClInclude Include="protobuf\cpp\ErrorResponse.pb.h" />
    <ClInclude Include="protobuf\cpp\GetSceneRequest.pb.h" />
    <ClInclude Include="protobuf\cpp\GetSceneResponse.pb.h" />
    <ClInclude Include="protobuf\cpp\GetVersionRequest.pb.h" />
    <ClInclude Include="protobuf\cpp\GetVersionResponse.pb.h" />
    <ClInclude Include="protobuf\cpp\MessageHeader.pb.h" />
    <ClInclude Include="protobuf\cpp\Point.pb.h" />
    <ClInclude Include="protobuf\cpp\Rectangle.pb.h" />
    <ClInclude Include="Rectangle.h" />
    <ClInclude Include="RequestByebye.h" />
    <ClInclude Include="RequestCreateWorld.h" />
    <ClInclude Include="RequestGetScene.h" />
    <ClInclude Include="RequestGetVersion.h" />
    <ClInclude Include="ResponseCreateWorld.h" />
    <ClInclude Include="ResponseError.h" />
    <ClInclude Include="ResponseGetScene.h" />
    <ClInclude Include="ResponseGetVersion.h" />
    <ClInclude Include="SessionId.h" />
    <ClInclude Include="StreetGangIds.h" />
    <ClInclude Include="StreetGangRequester.h" />
    <ClInclude Include="StreetGangResponder.h" />
    <ClInclude Include="StreetGangRestResponseJsonEncoder.h" />
    <ClInclude Include="StreetGangRestResponseTextEncoder.h" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="protobuf\CreateWorldRequest.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="protobuf\CreateWorldResponse.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="protobuf\ErrorResponse.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="protobuf\GetSceneRequest.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="protobuf\GetSceneResponse.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="protobuf\GetVersionResponse.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="protobuf\MessageHeader.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="protobuf\Point.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="protobuf\Rectangle.proto">
      <FileType>Document</FileType>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="protobuf\ByebyeRequest.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="protobuf\GetVersionRequest.proto">
      <FileType>Document</FileType>
    </CustomBuild>
    <None Include="protobuf\StreetGangPBService.proto" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{4759B4AB-DCD8-443E-91BA-BE9E5E15A106}</ProjectGuid>
    <TemplateGuid>{0a049372-4c4d-4ea0-a64e-dc6ad88ceca1}</TemplateGuid>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <Configuration>Debug</Configuration>
    <Platform Condition="'$(Platform)' == ''">Win32</Platform>
    <RootNamespace>streetgangapi</RootNamespace>
    <DriverType>KMDF</DriverType>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Check|Win32'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <ConfigurationType>StaticLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Check|x64'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <ConfigurationType>StaticLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Check|ARM'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <ConfigurationType>StaticLibrary</ConfigurationType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Check|x64'">
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Check|Win32'">
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Check|ARM'">
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)tools\protobuf\$(Platform)\include;$(SolutionDir)tools\json;$(SolutionDir)microreactor\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS</PreprocessorDefinitions>
    </ClCompile>
    <CustomBuild>
      <Command>IF NOT EXIST $(ProjectDir)protobuf\cpp md $(ProjectDir)protobuf\cpp
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --cpp_out=$(ProjectDir)protobuf\cpp %(FullPath)
IF NOT EXIST $(ProjectDir)protobuf\java md $(ProjectDir)protobuf\java
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --java_out=$(ProjectDir)protobuf\java %(FullPath)</Command>
      <Message>protoc %(Filename)%(Extension)</Message>
      <Outputs>$(ProjectDir)protobuf\cpp\%(Filename).pb.h;$(ProjectDir)protobuf\cpp\%(Filename).pb.cc</Outputs>
    </CustomBuild>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)tools\protobuf\$(Platform)\$(Configuration)\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libprotobufd.lib</AdditionalDependencies>
    </Lib>
    <PreBuildEvent>
      <Command>powershell.exe -nologo -noprofile -command "&amp; { if (!(Test-Path -Path '$(SolutionDir)tools\protobuf\x64')) { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('$(SolutionDir)tools\protobuf\x64.zip', '$(SolutionDir)tools\protobuf'); } }"</Command>
      <Message>Extract $(SolutionDir)tools\protobuf\x64.zip -&gt; $(SolutionDir)tools\protobuf</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Check|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)tools\protobuf\$(Platform)\include;$(SolutionDir)tools\json;$(SolutionDir)microreactor\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS</PreprocessorDefinitions>
    </ClCompile>
    <CustomBuild>
      <Command>IF NOT EXIST $(ProjectDir)protobuf\cpp md $(ProjectDir)protobuf\cpp
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --cpp_out=$(ProjectDir)protobuf\cpp %(FullPath)
IF NOT EXIST $(ProjectDir)protobuf\java md $(ProjectDir)protobuf\java
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --java_out=$(ProjectDir)protobuf\java %(FullPath)</Command>
      <Message>protoc %(Filename)%(Extension)</Message>
      <Outputs>$(ProjectDir)protobuf\cpp\%(Filename).pb.h;$(ProjectDir)protobuf\cpp\%(Filename).pb.cc</Outputs>
    </CustomBuild>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)tools\protobuf\$(Platform)\Debug\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libprotobufd.lib</AdditionalDependencies>
    </Lib>
    <PreBuildEvent>
      <Command>powershell.exe -nologo -noprofile -command "&amp; { if (!(Test-Path -Path '$(SolutionDir)tools\protobuf\x64')) { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('$(SolutionDir)tools\protobuf\x64.zip', '$(SolutionDir)tools\protobuf'); } }"</Command>
      <Message>Extract $(SolutionDir)tools\protobuf\x64.zip -&gt; $(SolutionDir)tools\protobuf</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)tools\protobuf\$(Platform)\include;$(SolutionDir)tools\json;$(SolutionDir)microreactor\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS</PreprocessorDefinitions>
    </ClCompile>
    <CustomBuild>
      <Command>IF NOT EXIST $(ProjectDir)protobuf\cpp md $(ProjectDir)protobuf\cpp
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --cpp_out=$(ProjectDir)protobuf\cpp %(FullPath)
IF NOT EXIST $(ProjectDir)protobuf\java md $(ProjectDir)protobuf\java
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --java_out=$(ProjectDir)protobuf\java %(FullPath)</Command>
      <Message>protoc %(Filename)%(Extension)</Message>
      <Outputs>$(ProjectDir)protobuf\cpp\%(Filename).pb.h;$(ProjectDir)protobuf\cpp\%(Filename).pb.cc</Outputs>
    </CustomBuild>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)tools\protobuf\$(Platform)\$(Configuration)\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libprotobuf.lib</AdditionalDependencies>
    </Lib>
    <PreBuildEvent>
      <Command>powershell.exe -nologo -noprofile -command "&amp; { if (!(Test-Path -Path '$(SolutionDir)tools\protobuf\x64')) { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('$(SolutionDir)tools\protobuf\x64.zip', '$(SolutionDir)tools\protobuf'); } }"</Command>
      <Message>Extract $(SolutionDir)tools\protobuf\x64.zip -&gt; $(SolutionDir)tools\protobuf</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)tools\protobuf\$(Platform)\include;$(SolutionDir)tools\json;$(SolutionDir)microreactor\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS</PreprocessorDefinitions>
    </ClCompile>
    <CustomBuild>
      <Command>IF NOT EXIST $(ProjectDir)protobuf\cpp md $(ProjectDir)protobuf\cpp
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --cpp_out=$(ProjectDir)protobuf\cpp %(FullPath)
IF NOT EXIST $(ProjectDir)protobuf\java md $(ProjectDir)protobuf\java
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --java_out=$(ProjectDir)protobuf\java %(FullPath)</Command>
      <Message>protoc %(Filename)%(Extension)</Message>
      <Outputs>$(ProjectDir)protobuf\cpp\%(Filename).pb.h;$(ProjectDir)protobuf\cpp\%(Filename).pb.cc</Outputs>
    </CustomBuild>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)tools\protobuf\$(Platform)\$(Configuration)\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libprotobufd.lib</AdditionalDependencies>
    </Lib>
    <PreBuildEvent>
      <Command>powershell.exe -nologo -noprofile -command "&amp; { if (!(Test-Path -Path '$(SolutionDir)tools\protobuf\x64')) { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('$(SolutionDir)tools\protobuf\x64.zip', '$(SolutionDir)tools\protobuf'); } }"</Command>
      <Message>Extract $(SolutionDir)tools\protobuf\x64.zip -&gt; $(SolutionDir)tools\protobuf</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Check|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)tools\protobuf\$(Platform)\include;$(SolutionDir)tools\json;$(SolutionDir)microreactor\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS</PreprocessorDefinitions>
    </ClCompile>
    <CustomBuild>
      <Command>IF NOT EXIST $(ProjectDir)protobuf\cpp md $(ProjectDir)protobuf\cpp
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --cpp_out=$(ProjectDir)protobuf\cpp %(FullPath)
IF NOT EXIST $(ProjectDir)protobuf\java md $(ProjectDir)protobuf\java
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --java_out=$(ProjectDir)protobuf\java %(FullPath)</Command>
      <Message>protoc %(Filename)%(Extension)</Message>
      <Outputs>$(ProjectDir)protobuf\cpp\%(Filename).pb.h;$(ProjectDir)protobuf\cpp\%(Filename).pb.cc</Outputs>
    </CustomBuild>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)tools\protobuf\$(Platform)\Debug\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libprotobufd.lib</AdditionalDependencies>
    </Lib>
    <PreBuildEvent>
      <Command>powershell.exe -nologo -noprofile -command "&amp; { if (!(Test-Path -Path '$(SolutionDir)tools\protobuf\x64')) { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('$(SolutionDir)tools\protobuf\x64.zip', '$(SolutionDir)tools\protobuf'); } }"</Command>
      <Message>Extract $(SolutionDir)tools\protobuf\x64.zip -&gt; $(SolutionDir)tools\protobuf</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)tools\protobuf\$(Platform)\include;$(SolutionDir)tools\json;$(SolutionDir)microreactor\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS</PreprocessorDefinitions>
    </ClCompile>
    <CustomBuild>
      <Command>IF NOT EXIST $(ProjectDir)protobuf\cpp md $(ProjectDir)protobuf\cpp
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --cpp_out=$(ProjectDir)protobuf\cpp %(FullPath)
IF NOT EXIST $(ProjectDir)protobuf\java md $(ProjectDir)protobuf\java
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --java_out=$(ProjectDir)protobuf\java %(FullPath)</Command>
      <Message>protoc %(Filename)%(Extension)</Message>
      <Outputs>$(ProjectDir)protobuf\cpp\%(Filename).pb.h;$(ProjectDir)protobuf\cpp\%(Filename).pb.cc</Outputs>
    </CustomBuild>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)tools\protobuf\$(Platform)\$(Configuration)\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libprotobuf.lib</AdditionalDependencies>
    </Lib>
    <PreBuildEvent>
      <Command>powershell.exe -nologo -noprofile -command "&amp; { if (!(Test-Path -Path '$(SolutionDir)tools\protobuf\x64')) { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('$(SolutionDir)tools\protobuf\x64.zip', '$(SolutionDir)tools\protobuf'); } }"</Command>
      <Message>Extract $(SolutionDir)tools\protobuf\x64.zip -&gt; $(SolutionDir)tools\protobuf</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)tools\protobuf\$(Platform)\include;$(SolutionDir)tools\json;$(SolutionDir)microreactor\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS</PreprocessorDefinitions>
    </ClCompile>
    <CustomBuild>
      <Command>IF NOT EXIST $(ProjectDir)protobuf\cpp md $(ProjectDir)protobuf\cpp
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --cpp_out=$(ProjectDir)protobuf\cpp %(FullPath)
IF NOT EXIST $(ProjectDir)protobuf\java md $(ProjectDir)protobuf\java
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --java_out=$(ProjectDir)protobuf\java %(FullPath)</Command>
      <Message>protoc %(Filename)%(Extension)</Message>
      <Outputs>$(ProjectDir)protobuf\cpp\%(Filename).pb.h;$(ProjectDir)protobuf\cpp\%(Filename).pb.cc</Outputs>
    </CustomBuild>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)tools\protobuf\$(Platform)\$(Configuration)\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libprotobufd.lib</AdditionalDependencies>
    </Lib>
    <PreBuildEvent>
      <Command>powershell.exe -nologo -noprofile -command "&amp; { if (!(Test-Path -Path '$(SolutionDir)tools\protobuf\x64')) { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('$(SolutionDir)tools\protobuf\x64.zip', '$(SolutionDir)tools\protobuf'); } }"</Command>
      <Message>Extract $(SolutionDir)tools\protobuf\x64.zip -&gt; $(SolutionDir)tools\protobuf</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Check|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)tools\protobuf\$(Platform)\include;$(SolutionDir)tools\json;$(SolutionDir)microreactor\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS</PreprocessorDefinitions>
    </ClCompile>
    <CustomBuild>
      <Command>IF NOT EXIST $(ProjectDir)protobuf\cpp md $(ProjectDir)protobuf\cpp
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --cpp_out=$(ProjectDir)protobuf\cpp %(FullPath)
IF NOT EXIST $(ProjectDir)protobuf\java md $(ProjectDir)protobuf\java
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --java_out=$(ProjectDir)protobuf\java %(FullPath)</Command>
      <Message>protoc %(Filename)%(Extension)</Message>
      <Outputs>$(ProjectDir)protobuf\cpp\%(Filename).pb.h;$(ProjectDir)protobuf\cpp\%(Filename).pb.cc</Outputs>
    </CustomBuild>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)tools\protobuf\$(Platform)\Debug\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libprotobufd.lib</AdditionalDependencies>
    </Lib>
    <PreBuildEvent>
      <Command>powershell.exe -nologo -noprofile -command "&amp; { if (!(Test-Path -Path '$(SolutionDir)tools\protobuf\x64')) { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('$(SolutionDir)tools\protobuf\x64.zip', '$(SolutionDir)tools\protobuf'); } }"</Command>
      <Message>Extract $(SolutionDir)tools\protobuf\x64.zip -&gt; $(SolutionDir)tools\protobuf</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)tools\protobuf\$(Platform)\include;$(SolutionDir)tools\json;$(SolutionDir)microreactor\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS</PreprocessorDefinitions>
    </ClCompile>
    <CustomBuild>
      <Command>IF NOT EXIST $(ProjectDir)protobuf\cpp md $(ProjectDir)protobuf\cpp
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --cpp_out=$(ProjectDir)protobuf\cpp %(FullPath)
IF NOT EXIST $(ProjectDir)protobuf\java md $(ProjectDir)protobuf\java
$(SolutionDir)tools\protobuf\$(Platform)\Release\bin\protoc.exe --proto_path=$(ProjectDir)protobuf --java_out=$(ProjectDir)protobuf\java %(FullPath)</Command>
      <Message>protoc %(Filename)%(Extension)</Message>
      <Outputs>$(ProjectDir)protobuf\cpp\%(Filename).pb.h;$(ProjectDir)protobuf\cpp\%(Filename).pb.cc</Outputs>
    </CustomBuild>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)tools\protobuf\$(Platform)\$(Configuration)\lib</AdditionalLibraryDirectories>
      <AdditionalDependencies>libprotobuf.lib</AdditionalDependencies>
    </Lib>
    <PreBuildEvent>
      <Command>powershell.exe -nologo -noprofile -command "&amp; { if (!(Test-Path -Path '$(SolutionDir)tools\protobuf\x64')) { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('$(SolutionDir)tools\protobuf\x64.zip', '$(SolutionDir)tools\protobuf'); } }"</Command>
      <Message>Extract $(SolutionDir)tools\protobuf\x64.zip -&gt; $(SolutionDir)tools\protobuf</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>