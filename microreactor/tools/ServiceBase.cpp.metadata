#include "$serviceServiceBase.h"
@repeatstart
#include "$method$pathnameReactorBase.h"
@repeatend


namespace $namespace
{
    $serviceServiceBase::$serviceServiceBase(const std::string& hostAddress, uint16_t port)
        : RestService(hostAddress, port)
    {
    }

    $serviceServiceBase::$serviceServiceBase(std::shared_ptr<microreactor::Profile> profile)
        : RestService(profile)
    {
    }

    $serviceServiceBase::$serviceServiceBase(std::shared_ptr<microreactor::Listener> listener)
        : RestService(listener)
    {
    }

    $serviceServiceBase::~$serviceServiceBase()
    {
    }

    bool $serviceServiceBase::Initialize()
    {
        @repeatstart
        mListener->GetDispatcher<microreactor::RestDispatcher>()->RegisterResource("$method", "$path", std::bind(&$serviceServiceBase::Create$method$pathnameReactor, this, std::placeholders::_1, std::placeholders::_2));
        @repeatend
        return RestService::Initialize();
    }
}
